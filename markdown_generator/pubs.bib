
@inproceedings{dhaouadi_towards_2021,
	author = {Mouna Dhaouadi and Kate M. B. Spencer* and Megan H. Varnum* and Alicia M. Grubb and Michalis Famelis},
	booktitle = {[To Appear] Journal of Object Technology {JOT}},
	title = {{Towards a Generic Method for Articulating Design-time Uncertainty}},
	month = {May},
	abstract = {Modelers encounter different kinds of uncertainty in their designs and models of software systems. One such type concerns uncertainty about how to build a model. This is called design-time uncertainty, and existing research has studied how modelers can work in its presence. However, the process by which they come to elicit and express their uncertainties remains unclear. In this paper, we take steps towards addressing this gap by introducing DRUIDE (Design and Requirements Uncertainty Integrated Development Environment), a language and workflow for articulating design time uncertainty. We present and illustrate our proposal on a software design example.  Additionally, we conduct a real life case study of domain analysis related to the uncertainty caused by the COVID-19 pandemic, and evaluate DRUIDE with it.  Our evaluation shows that DRUIDE is sufficiently expressive to articulate design time uncertainty.},
	date = {2021}
}

@inproceedings{grubb_four_2021,
	author = {Alicia M. Grubb},
	booktitle = {[To Appear] Proceedings of the IEEE/ACM 2nd International Workshop on Ethics in Software Engineering Research and Practice {SEthics}},
	title = {{Four Opportunities for SE Ethics Education}},
	date = {2021},
	abstract = {Many software engineers direct their talents towards software systems which do not fall into traditional definitions of safety critical systems, but are integral to society (e.g., social media, expert advisor systems). While codes of ethics can be a useful starting point for ethical discussions, codes are often limited in scope to professional ethics and may not offer answers to individuals weighing competing ethical priorities. In this paper, we present our vision for improving ethics education in software engineering. To do this, we consider current and past curricular recommendations, as well as recent efforts within the broader computer science community. We layout challenges with vignettes and assessments in teaching, and give recommendations for incorporating updated examples and broadening the scope of ethics education in software engineering.},
	annotation = {[Author {PrePrint}](https://scholarworks.smith.edu/csc_facpubs/155)}
}

@inproceedings{grubb_reflections_2020,
	title = {Reflections on Course Blogs in First-year {CS}},
	abstract = {Software engineers, and more broadly computer scientists, must be able to communicate clearly to exchange ideas with team members and stakeholders, making writing an essential part of computer science education. The Writing Across the Curriculum initiative endeavours to engage students in writing and creating a community that supports writing and its teaching in every discipline. As part of this initiative, computer science ({CS}) instructors at a large public university added a weekly blogging assignment to their {CSII} course with four aims: 
(1) improve student learning of writing and {CS} concepts; 
(2) understand local variations among language speakers; 
(3) provide writing feedback at scale; and 
(4) combine writing-to-learn with disciplinary writing.
In this paper, we present the design rationale for the blog assignment, as well as the results of an empirical study of how the assignment is perceived by students and teaching assistants. Using both quantitative and qualitative analysis, we tease apart the mixed perceptions of the students and the outcomes of our assignment aims. We discuss problems as well as potential opportunities for improving the assignment, and explore recommendations for those interested in teaching writing.},
	booktitle = {Proceedings of the 32nd {IEEE} International Conference on Software Engineering Education \& Training {CSEE}\&T},
	author = {Grubb, Alicia M.},
	month = {October},
	date = {2020}
}

@inproceedings{cebula_preliminary_2020,
	title = {A Preliminary Investigation of the Utility of Goal Model Construction},
	abstract = {Goal models have long been used in the literature to model and reason about stakeholders' intentions. Prior work proposed several studies aimed at investigating what utility stakeholders derive from constructing and analyzing goal models. We designed and conducted an initial empirical study that explores the construction stage of goal modeling, asking whether stakeholders benefit from manually drawing their model. We recruited eight qualified participants and asked each to create a goal model for a decision they were considering, while talking out loud. Half of the participants in this study used {BloomingLeaf}, while the remaining participants drew goal models by hand. Using information gathered through an online pre-study questionnaire, we constructed a goal model for each participant. Participants compared our generated models with their manually created ones. We used open coding to find themes and categories for qualitative responses. Analysis showed participants preferred their own model to the researcher generated one. The results of which have implications for future studies, as well as goal model adoption and automation.},
	booktitle = {Proceedings of the 13th International i* Workshop {iStar}},
	author = {Cebula*, Naomi and Diao*, Lily and Grubb, Alicia M.},
	date = {2020},
	annotation = {[Paper](http://ceur-ws.org/Vol-2641/paper_12.pdf)
[Talk Slides](https://amgrubb.github.io/files/{iStar}2020\_Paper02\_presentation.pdf)}
}

@inproceedings{varnum_towards_2020,
	title = {Towards an Evaluation Visualization with Color},
	abstract = {Goal models help stakeholders understand project scenarios and make decisions. In prior work, we used Tropos evaluation semantics to allow for automated analysis over time; however, formal evaluation labels (e.g., (F, bottom)) are difficult for users to interpret across a large model. In this paper, we present our work towards understanding the extent to which using colors in goal modeling affects users' ability to make decisions. Specifically, we are interested in studying if coloring intentions with evaluation information allows for better comparisons of initial states and simulations of future paths. To address this question, we developed a color visualization extension to {BloomingLeaf}, a goal model analysis tool, where the color of each node is changed based on either the initial evaluations or the resulting analysis over time. This then allows us to explore if and how color visualization assists the user with decision making. We present our implementation and initial evaluation of this extension.},
	booktitle = {Proceedings of the 13th International i* Workshop {iStar}},
	author = {Varnum*, Megan H. and Spencer*, Kate M. B. and Grubb, Alicia M.},
	date = {2020},
	annotation = {[Paper](http://ceur-ws.org/Vol-2641/paper_14.pdf) 
[Talk Slides](https://amgrubb.github.io/files/{iStar}2020\_Paper01\_presentation.pdf)
[Video]{https://drive.google.com/file/d/1CnmKdA-v1OGUZPtzRBW2Koc1UIgqV_D-/view}}

}

@inproceedings{wang__towards_2020,
	title = {Towards a General Solution for Layout of Visual Goal Models with Actors},
	abstract = {Goal models help stakeholders make trade-off decisions in the early stages of project development. While these approaches have significant analysis capabilities, they have yet to see broad industrial adoption, with the construction of scalable large realistic goal models acting as a significant barrier. Over the last decade, researchers have used force-directed algorithms, specifically {GraphViz}, to layout goal models and have called for improved layout algorithms to better accommodate the unique challenges presented by actor-based models. We extend a forcedirected algorithm to include goal model heuristics, and independently arrived at a domain specific version of a generic layout algorithm for undirected compound graphs. As initial validation of the effectiveness and scalability of our algorithm, we implement our approach in {AnonymousTool}, a goal model analysis tool. Initial results are promising; yet, further collaboration andvalidation across the various goal modeling approaches (e.g., {GRL}, {iStar}, Tropos) is  equired before we can recommend ourapproach to be adopted in tooling. This paper presents early results and lays a foundation for discussion within our {GORE} community},
	booktitle = {Proceedings of the {IEEE} 28th International Requirements Engineering Conference {RE}},
	author = {Wang*, Y. Lucy and Grubb, Alicia M.},
	date = {2020},
	month = {November},
	annotation = {[Author {PrePrint}](https://amgrubb.github.io/files/2020-Towards-a-General-Solution-for-Layout-of-Visual-Goal-Models-with-Actors.pdf)}
}


@inproceedings{hu_support_2019,
	title = {Support for User Generated Evolutions of Goal Models},
	abstract = {Goal models are used in early phase requirements engineering to elicit stakeholders' intentions, analyze dependencies, and help stakeholders make trade-off decisions about the project and its interaction with the environment. The Evolving Intentions  framework extended goal model analysis to evaluate how models change over time, by creating simulation paths showing possible evolutions of the model. More recently, we extended this analysis to allow users to explore states along the path and generate their own simulation paths. However, this approach is limited by users ability to comprehend the state space, which grows exponentially with the size of the model. In this paper, we explore using filters to reduce the number of viewable solutions enabling users to create their own simulation results. We present our approach and initial validation, including an analysis of prior models and a review of expert feedback.},
	pages = {1--7},
	booktitle = {Proceedings of the 11th International Workshop on Modeling in Software Engineering {MiSE}},
	author = {Hu, Boyue Caroline and Grubb, Alicia M.},
	date = {2019},
	annotation = {[Author {PrePrint}](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{MiSE}19.pdf)}
}

@inproceedings{grubb_reflection_2018,
	title = {Reflection on Evolutionary Decision Making with Goal Modeling via Empirical Studies},
	url = {http://www.cs.toronto.edu/~amgrubb/archive/RE18.pdf},
	abstract = {Goal models have long been used in academia without wide spread adoption in industry. If the fundamental purpose of goal models is to allow stakeholders to generate scenarios and ask what if questions, then which parts of the process of model construction, analysis, and evolution benefit from and which are hindered by manual activities? The recent expansion of goal modelling to ask time-based questions further amplifies this issue because significant additional information is required from stakeholders. Through a series of empirical studies, we aim to isolate the processes of model construction, analysis, and evolution for the purpose of studying the utility of goal-oriented requirements engineering approaches and exploring which tasks are essential practices that stakeholders must complete themselves to gain modeling benefit, and which tasks can be simplified through automation. In this process, we will also measure the benefits of completing relevant goal modelling activities with and without timing analysis. In this short communication, we describe our objectives for understanding the benefits of and barriers to goal-oriented requirements engineering.},
	pages = {376--381},
	booktitle = {Proceedings of the {IEEE} 26th International Requirements Engineering Conference {RE}},
	author = {Grubb, Alicia M.},
	date = {2018},
	annotation = {[Author {PrePrint}](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{RE}18.pdf)}
}

@inproceedings{grubb_bloomingleaf_2018,
	title = {{BloomingLeaf}: A Formal Tool for Requirements Evolution over Time},
	pages = {490--491},
	booktitle = {Proceedings of the {IEEE} 26th International Requirements Engineering Conference {RE}: Posters \& Tool Demos},
	author = {Grubb, Alicia M. and Chechik, Marsha},
	date = {2018},
	annotation = {[Author {PrePrint}](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{RE}18-Demo.pdf)
[Poster](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{RE}18-Demo-Poster.pdf)}
}

@inproceedings{li_understanding_2016,
	title = {Understanding Challenges and Tradeoffs in {iStar} Tool Development},
	url = {http://www.cs.toronto.edu/~amgrubb/archive/iStar16Li.pdf},
	abstract = {Many {iStar}-based modeling and analysis tools have been developed for specific {iStar}-related purposes (e.g., tools enumerated in {iStar} wiki). Despite the proliferation of tools, new tools keep being built, taking resources and time and possibly "reinventing the wheel" in terms of tool functionality. To gain an in-depth understanding of this situation, we are interested in the challenges and tradeoffs in creating {iStar} tools. In this paper, we examine three diverse tools as case studies, illustrating the challenges and tradeoffs from the developer's perspective. Based on such studies, we establish a goal model to capture the collected knowledge, which can help researchers to make informed decisions and optimize their tool development.},
	pages = {49--54},
	booktitle = {Proceedings of the Ninth International i* Workshop  {iStar}},
	author = {Li, Tong and Grubb, Alicia M. and Horkoff, Jennifer},
	date = {2016},
	annotation = {[Author {PrePrint}](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{iStar}16Li.pdf)}
}

@inproceedings{grubb_adding_2015,
	title = {Adding Temporal Intention Dynamics to Goal Modeling: A Position Paper},
	url = {http://www.cs.toronto.edu/~amgrubb/archive/MiSE-2015.pdf},
	abstract = {Goal models for early phase requirements enable modelers to elicit stakeholders' intentions, analyze dependencies and select preferred alternatives. Standard analysis techniques provide options for analysis of static goal models but do not consider the dynamic environment that the model represents and do not evaluate the intentions over time. In this position paper, we illustrate that goal model analysis for early phase requirements can be improved by explicitly considering the intention dynamics of a potential system across multiple time scales.},
	pages = {66--71},
	booktitle = {Proceedings of the Seventh International Workshop on Modeling in Software Engineering {MiSE}},
	author = {Grubb, Alicia M.},
	date = {2015},
	annotation = {[Author {PrePrint}](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{MiSE}-2015.pdf)}
}

@inproceedings{grubb_looking_2016,
	title = {Looking into the Crystal Ball: Requirements Evolution over Time},
	url = {http://www.cs.toronto.edu/~amgrubb/archive/RE16.pdf},
	abstract = {Goal modeling has long been used in the literature to model and reason about system requirements, constraints within the domain and environment, and stakeholders' goals. Goal model analysis helps stakeholders answer "what if" questions enabling them to make tradeoff decisions about their project requirements. However, questions concerning the evolution over time of stakeholder requirements or changes in actor intentionality are not explicitly addressed by current approaches. In this paper, we tackle this problem by presenting a method for specifying changes in intentions over time, and a technique that uses simulation for asking a variety of "what if" questions about such models. Using the development of a web-based modeling tool as an example, we demonstrate that this technique is effective for debugging goal models and answering stakeholder questions.},
	pages = {86--95},
	booktitle = {Proceedings of the {IEEE} 24th International Requirements Engineering Conference {RE}},
	author = {Grubb, Alicia M. and Chechik, Marsha},
	date = {2016},
	month = {December},
	annotation = {[Author {PrePrint}](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{RE}16.pdf)
[Supplementary Information](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{RE}16-Supplement/)
[Talk Slides](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{RE}16-Talk.pdf)}
}

@inproceedings{grubb_growingleaf_2016,
	title = {{GrowingLeaf}: Supporting Requirements Evolution over Time},
	url = {http://www.cs.toronto.edu/~amgrubb/archive/iStar16.pdf},
	abstract = {Goal modeling and analysis techniques help stakeholders consider possible tradeoff alternatives in their requirements and answer "what if" questions about those alternatives. Software projects today exist in an ephemeral state, and current goal modeling approaches do not answer questions about model evolution and changes in actors' intentionality. We have developed a technique {\textbackslash}[8{\textbackslash}] that allows stakeholders to explicate the dynamic nature of their intentional elements, and ask questions about how this dynamicity affects project outcomes. In this paper, we present {GrowingLeaf} , a new web-based goal modeling and analysis tool that implements this technique for {iStar} models. We discuss its support for modeling, simulation, and static analysis and illustrate it for a small example
of making lunch.},
	pages = {31--36},
	booktitle = {Proceedings of the Ninth International i* Workshop {iStar}},
	author = {Grubb, Alicia M. and Song, Gary and Chechik, Marsha},
	date = {2016},
	month = {November},
	annotation = {[Author {PrePrint}](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{iStar}16.pdf)[Talk Slides](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{iStar}16-Talk.pdf)}
}

@inproceedings{grubb_modeling_2017,
	title = {Modeling and Reasoning with Changing Intentions: An Experiment},
	url = {http://www.cs.toronto.edu/~amgrubb/archive/RE17.pdf},
	abstract = {Existing modeling approaches in requirements engineering assume that stakeholder goals are static: once set, they remain the same throughout the lifecycle of the project. Of course, such goals, like anything else, may change over time. In earlier work, we introduced Evolving Intentions: an approach that allows stakeholders to specify how evaluations of goal model elements change over time. Simulation over Evolving Intentions enables stakeholders to ask a variety of "what if" questions, and evaluate possible evolutions of a goal model. {GrowingLeaf} is a web-based tool that implements both the modeling and analysis components of this approach. In this paper, we investigate the effectiveness and usability of Evolving Intentions, Simulation over Evolving Intentions, and {GrowingLeaf}. We report on a betweensubjects experiment we conducted with fifteen graduate students familiar with requirements engineering. Using qualitative, quantitative, and timing data, we show that Evolving Intentions were intuitive, that Simulation over Evolving Intentions increased the subjects' understanding and produced meaningful results, and that {GrowingLeaf} was found to be effective and usable.},
	pages = {164--173},
	booktitle = {Proceedings of the {IEEE} 25th International Requirements Engineering Conference {RE}},
	author = {Grubb, Alicia M. and Chechik, Marsha},
	date = {2017},
	annotation = {[Author {PrePrint}](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{RE}17.pdf)
[Supplementary Information](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{RE}17-Supplement/)
[Talk Slides](http://www.cs.toronto.edu/{\textasciitilde}amgrubb/archive/{RE}17-Talk.pdf)}
}